// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { GetUmbracoRelationsmanagerApiV1TreeItemNullData, GetUmbracoRelationsmanagerApiV1TreeItemNullResponse, GetUmbracoRelationsmanagerApiV1TreeRootData, GetUmbracoRelationsmanagerApiV1TreeRootResponse, PostUmbracoRelationsmanagerApiV1RelationData, PostUmbracoRelationsmanagerApiV1RelationResponse, GetUmbracoRelationsmanagerApiV1RelationByIdData, GetUmbracoRelationsmanagerApiV1RelationByIdResponse, DeleteUmbracoRelationsmanagerApiV1RelationByIdData, DeleteUmbracoRelationsmanagerApiV1RelationByIdResponse } from './types.gen';

/**
 * @param data The data for the request.
 * @param data.skip
 * @param data.take
 * @returns unknown OK
 * @throws ApiError
 */
export const getUmbracoRelationsmanagerApiV1TreeItemNull = (data: GetUmbracoRelationsmanagerApiV1TreeItemNullData = {}): CancelablePromise<GetUmbracoRelationsmanagerApiV1TreeItemNullResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/umbraco/relationsmanager/api/v1/tree/item/null',
    query: {
        skip: data.skip,
        take: data.take
    }
}); };

/**
 * @param data The data for the request.
 * @param data.skip
 * @param data.take
 * @returns unknown OK
 * @throws ApiError
 */
export const getUmbracoRelationsmanagerApiV1TreeRoot = (data: GetUmbracoRelationsmanagerApiV1TreeRootData = {}): CancelablePromise<GetUmbracoRelationsmanagerApiV1TreeRootResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/umbraco/relationsmanager/api/v1/tree/root',
    query: {
        skip: data.skip,
        take: data.take
    }
}); };

/**
 * @param data The data for the request.
 * @param data.requestBody
 * @returns number OK
 * @returns string Created
 * @throws ApiError
 */
export const postUmbracoRelationsmanagerApiV1Relation = (data: PostUmbracoRelationsmanagerApiV1RelationData = {}): CancelablePromise<PostUmbracoRelationsmanagerApiV1RelationResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/umbraco/relationsmanager/api/v1/relation',
    body: data.requestBody,
    mediaType: 'application/json',
    responseHeader: 'Umb-Notifications',
    errors: {
        400: 'Bad Request'
    }
}); };

/**
 * @param data The data for the request.
 * @param data.id
 * @param data.page
 * @param data.take
 * @param data.sort
 * @param data.desc
 * @returns unknown OK
 * @throws ApiError
 */
export const getUmbracoRelationsmanagerApiV1RelationById = (data: GetUmbracoRelationsmanagerApiV1RelationByIdData): CancelablePromise<GetUmbracoRelationsmanagerApiV1RelationByIdResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/umbraco/relationsmanager/api/v1/relation/{id}',
    path: {
        id: data.id
    },
    query: {
        page: data.page,
        take: data.take,
        sort: data.sort,
        desc: data.desc
    }
}); };

/**
 * @param data The data for the request.
 * @param data.id
 * @returns string OK
 * @throws ApiError
 */
export const deleteUmbracoRelationsmanagerApiV1RelationById = (data: DeleteUmbracoRelationsmanagerApiV1RelationByIdData): CancelablePromise<DeleteUmbracoRelationsmanagerApiV1RelationByIdResponse> => { return __request(OpenAPI, {
    method: 'DELETE',
    url: '/umbraco/relationsmanager/api/v1/relation/{id}',
    path: {
        id: data.id
    },
    responseHeader: 'Umb-Notifications'
}); };